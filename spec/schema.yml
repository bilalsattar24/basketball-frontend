openapi: 3.0.1
info:
  title: NBA Team and Player API
  description: A backend API for storing and managing information about NBA teams and players.
  version: 1.0.0

servers:
  - url: https://api.my-nba-backend.com/v1  # Replace with your actual server URL

tags:
  - name: teams
    description: Operations related to managing NBA teams
  - name: players
    description: Operations related to managing NBA players

paths:
  /teams/{teamId}:
    get:
      tags:
        - teams
      summary: Get a team by ID
      description: Retrieves a single NBA team's information.
      parameters:
        - in: path
          name: teamId
          required: true
          schema:
            type: integer
            description: The unique ID of the NBA team.
      responses:
        200:
          description: Team found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        404:
          description: Team not found

  /players/{playerId}:
    get:
      tags: 
        - players
      summary: Get a player by ID
      description: Retrieves a single NBA player's information.
      parameters:
        - in: path
          name: playerId
          required: true
          schema:
            type: integer
            description: The unique ID of the NBA player.
      responses:
        200:
          description: Player found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        404:
          description: Player not found

components:
  schemas:
    Team:
      type: object
      required:
        - name
        - city
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Los Angeles Lakers
        city:
          type: string
          example: Los Angeles
        conference:
          type: string
          enum:
            - Eastern
            - Western
        division: 
          type: string 
        logoUrl:
          type: string 
          format: uri 

    Player:
      type: object
      required:
        - firstName
        - lastName
        - teamId
      properties:
        id: 
          type: integer
          format: int64
        firstName:
          type: string
          example: LeBron
        lastName:
          type: string
          example: James
        teamId:
          type: integer 
          description: The ID of the team the player belongs to.
        position:
          type: string
          enum:
             - PG
             - SG
             - SF
             - PF
             - C
        height:
          type: string
          example: "6'9"
        weight:
          type: integer
          example: 250
        imageUrl:
          type: string
          format: uri
